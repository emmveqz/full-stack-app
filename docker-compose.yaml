version: "3"

services:
  postgres_db:
    container_name: postgres-db
    build:
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
      context: .
      dockerfile: Dockerfile-postgres-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_PORT: ${DB_PORT}
      PGDATA: /data/postgres
      TZ: UTC
    healthcheck:
      test: psql --version
      interval: 2s
      timeout: 3s
      retries: 4
    network_mode: host
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./db-data:/data/postgres

  node_react_app:
    container_name: node-react-app
    build:
      args:
        GITHUB_AUTH_TOKEN: ${GITHUB_AUTH_TOKEN}
      context: .
      dockerfile: Dockerfile-node-react-app
    command:
      - /bin/sh
      - -c
      - |
        npm run build-ui
        npm run deploy-ui
        cd /home/node-react-app/src/web-server
        npx knex migrate:up 001_add_users_table.js
        npx knex seed:run --specific=001_seed_users_table.js
        npm run build-server
        npm run start-server
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SERVER_APP_PORT: ${SERVER_APP_PORT}
      NODE_ENV: ${SERVER_APP_ENV}
      TZ: UTC
    network_mode: host
    ports:
      - "${SERVER_APP_PORT}:${SERVER_APP_PORT}"
    volumes:
      - ./dist:/home/node-react-app/dist
    working_dir: /home/node-react-app/src/web-ui
